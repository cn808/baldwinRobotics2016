// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2439.SH16Bot;

import org.usfirst.frc2439.SH16Bot.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.*;
import org.usfirst.frc2439.SH16Bot.subsystems.*;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton zeroGyroBtn;
    public JoystickButton raiseIntakeBtn;
    public JoystickButton lowerIntakeBtn;
    public JoystickButton intakeBallBtn;
    public JoystickButton ejectBallBtn;
    public JoystickButton turnLeftBtn;
    public JoystickButton turnRightBtn;
    public Joystick leftJS;
    public JoystickButton liftGateBtn;
    public JoystickButton lowerGateBtn;
    public JoystickButton shiftUpBtn;
    public JoystickButton shiftDownBtn;
    public JoystickButton operDriveStraightBtn;
    public Joystick rightJS;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        rightJS = new Joystick(1);
        
        operDriveStraightBtn = new JoystickButton(rightJS, 1);
        operDriveStraightBtn.whileHeld(new DriveStraightModeCmd());
        shiftDownBtn = new JoystickButton(rightJS, 4);
        shiftDownBtn.whenPressed(new ShiftDownCmd());
        shiftUpBtn = new JoystickButton(rightJS, 3);
        shiftUpBtn.whenPressed(new ShiftUpCmd());
        lowerGateBtn = new JoystickButton(rightJS, 6);
        lowerGateBtn.whenPressed(new RaiseGateCmd());
        liftGateBtn = new JoystickButton(rightJS, 5);
        liftGateBtn.whenPressed(new LowerBridgeCmd());
        leftJS = new Joystick(2);
        
        turnRightBtn = new JoystickButton(leftJS, 9);
        turnRightBtn.whenPressed(new TurnToAngleCmd(90));
        turnLeftBtn = new JoystickButton(leftJS, 8);
        turnLeftBtn.whenPressed(new TurnToAngleCmd(-90));
        ejectBallBtn = new JoystickButton(leftJS, 5);
        ejectBallBtn.whileHeld(new EjectBallCmd());
        intakeBallBtn = new JoystickButton(leftJS, 4);
        intakeBallBtn.whileHeld(new IntakeBallCmd());
        lowerIntakeBtn = new JoystickButton(leftJS, 2);
        lowerIntakeBtn.whenPressed(new LowerIntakeCmd());
        raiseIntakeBtn = new JoystickButton(leftJS, 3);
        raiseIntakeBtn.whenPressed(new RaiseIntakeCmd());
        zeroGyroBtn = new JoystickButton(leftJS, 10);
        zeroGyroBtn.whenPressed(new ZeroGyroCmd());


        // SmartDashboard Buttons
        SmartDashboard.putData("RetractGateArmCmd", new RetractGateArmCmd());
        SmartDashboard.putData("ExtendGateArmCmd", new ExtendGateArmCmd());
        SmartDashboard.putData("TurnToAngleCmd", new TurnToAngleCmd());
        SmartDashboard.putData("AutoLowGoalScoreCmd", new AutoLowGoalScoreCmd());
        SmartDashboard.putData("ShiftUpCmd", new ShiftUpCmd());
        SmartDashboard.putData("ShiftDownCmd", new ShiftDownCmd());
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("OperatrorDriveCmd", new OperatrorDriveCmd());
        SmartDashboard.putData("LowerBridgeCmd", new LowerBridgeCmd());
        SmartDashboard.putData("RaiseGateCmd", new RaiseGateCmd());
        SmartDashboard.putData("LowerChevalCmd", new LowerChevalCmd());
        SmartDashboard.putData("RaiseIntakeCmd", new RaiseIntakeCmd());
        SmartDashboard.putData("LowerIntakeCmd", new LowerIntakeCmd());
        SmartDashboard.putData("IntakeBallCmd", new IntakeBallCmd());
        SmartDashboard.putData("EjectBallCmd", new EjectBallCmd());
        SmartDashboard.putData("AutoLowBarToGoalCmd", new AutoLowBarToGoalCmd());
        SmartDashboard.putData("OpenSallyDoorCmd", new OpenSallyDoorCmd());
        SmartDashboard.putData("DriveStraightModeCmd", new DriveStraightModeCmd());
        SmartDashboard.putData("ZeroGyroCmd", new ZeroGyroCmd());
        SmartDashboard.putData("LowerGateCmd", new LowerGateCmd());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getLeftJS() {
        return leftJS;
    }

    public Joystick getRightJS() {
        return rightJS;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

