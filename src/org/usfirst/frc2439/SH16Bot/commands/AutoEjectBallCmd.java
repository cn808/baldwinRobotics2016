// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2439.SH16Bot.commands;

import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc2439.SH16Bot.Robot;
import org.usfirst.frc2439.SH16Bot.RobotMap;
import edu.wpi.first.wpilibj.Timer;

/**
 *
 */
public class AutoEjectBallCmd extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
   	//SCHEN don't need the timer for eject
	Timer tm;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public AutoEjectBallCmd() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	tm  = new Timer();
    	tm.start();
    	//Robot.ballIntake.eject();
    }

    // Called repeatedly when this Command is scheduled to run
    // Run repeatedly while button held
    // Execute with timer for auto scoring in low goal
    protected void execute() {
    	Robot.ballIntake.intake();
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        //return !Robot.oi.getLeftJS().getRawButton(5)
   
    	return tm.get()>3.;
    } 
    
    // Called once after isFinished returns true
    protected void end() {
    	Robot.ballIntake.stopIntake();
    	//tm.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
