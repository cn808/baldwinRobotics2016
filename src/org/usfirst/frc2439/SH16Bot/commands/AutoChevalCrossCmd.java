// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2439.SH16Bot.commands;

import edu.wpi.first.wpilibj.command.CommandGroup;
import org.usfirst.frc2439.SH16Bot.subsystems.*;

/**
 *  An Autonomous Command for breaching the Cheval de Frise.
 *  
 *  Match Setup::
 *  	1) Intake Arm in raised position.
 *  	2) Ball inserted in intake for later teleop scoring.
 * 		3) Robot with rear wheel axle centered on line.
 * 		4) Intake arm centered on middle raised ramp.
 * 		5) Robot aligned straight (perpendicular to Cheval).
 * 
 * 	Command Sequence:
 * 		-  Robot drives to Cheval de Frise,
 * 		-  Ball intake arm lowered to push down ramp,
 * 		-  Robot drives over and stops in position to score in teleop.
 */
public class AutoChevalCrossCmd extends CommandGroup {


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
    public AutoChevalCrossCmd() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PARAMETERS
        // Add Commands here:
        // e.g. addSequential(new Command1());
        //      addSequential(new Command2());
        // these will run in order.

        // To run multiple commands at the same time,
        // use addParallel()
        // e.g. addParallel(new Command1());
        //      addSequential(new Command2());
        // Command1 and Command2 will run in parallel.

        // A command group will require all of the subsystems that each member
        // would require.
        // e.g. if Command1 requires chassis, and Command2 requires arm,
        // a CommandGroup containing them would require both the chassis and the
        // arm.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
        addSequential(new ShiftDownCmd());
        addSequential(new DriveStraightCmd(.7, 1989.));
        addSequential(new LowerIntakeCmd());
        addSequential(new DriveStraightCmd(0.6, 750.));
        addSequential(new RaiseIntakeCmd());
        addSequential(new DriveStraightCmd(0.6, 6000.));
        
        //addSequential(new AutoEjectBallCmd());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
 
    } 
}
